#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salud.Ocupacional.DM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="respirator")]
	public partial class BDSaludOcupacionalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertRiskFactor(RiskFactor instance);
    partial void UpdateRiskFactor(RiskFactor instance);
    partial void DeleteRiskFactor(RiskFactor instance);
    partial void InsertOccupationType(OccupationType instance);
    partial void UpdateOccupationType(OccupationType instance);
    partial void DeleteOccupationType(OccupationType instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertWorkCondition(WorkCondition instance);
    partial void UpdateWorkCondition(WorkCondition instance);
    partial void DeleteWorkCondition(WorkCondition instance);
    partial void InsertRespirator(Respirator instance);
    partial void UpdateRespirator(Respirator instance);
    partial void DeleteRespirator(Respirator instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertFilter(Filter instance);
    partial void UpdateFilter(Filter instance);
    partial void DeleteFilter(Filter instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertIndicatorSingle(IndicatorSingle instance);
    partial void UpdateIndicatorSingle(IndicatorSingle instance);
    partial void DeleteIndicatorSingle(IndicatorSingle instance);
    #endregion
		
		public BDSaludOcupacionalDataContext() : 
				base(global::Salud.Ocupacional.DM.Properties.Settings.Default.respiratorConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public BDSaludOcupacionalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSaludOcupacionalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSaludOcupacionalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSaludOcupacionalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserType> UserType
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctor
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Company> Company
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<RiskFactor> RiskFactor
		{
			get
			{
				return this.GetTable<RiskFactor>();
			}
		}
		
		public System.Data.Linq.Table<OccupationType> OccupationType
		{
			get
			{
				return this.GetTable<OccupationType>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedule
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<WorkCondition> WorkCondition
		{
			get
			{
				return this.GetTable<WorkCondition>();
			}
		}
		
		public System.Data.Linq.Table<Respirator> Respirator
		{
			get
			{
				return this.GetTable<Respirator>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activity
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Filter> Filter
		{
			get
			{
				return this.GetTable<Filter>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contract
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<IndicatorSingle> IndicatorSingle
		{
			get
			{
				return this.GetTable<IndicatorSingle>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Usuer")]
		public ISingleResult<Sp_Insert_UsuerResult> Sp_Insert_Usuer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNI", DbType="VarChar(20)")] string dNI, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName1", DbType="VarChar(20)")] string lastName1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName2", DbType="VarChar(20)")] string lastName2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="VarChar(20)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(20)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dNI, name, lastName1, lastName2, type, password, mobile, email);
			return ((ISingleResult<Sp_Insert_UsuerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Usuer")]
		public ISingleResult<Sp_Update_UsuerResult> Sp_Update_Usuer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNI", DbType="VarChar(20)")] string dNI, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName1", DbType="VarChar(20)")] string lastName1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName2", DbType="VarChar(20)")] string lastName2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mobile", DbType="VarChar(20)")] string mobile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(20)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dNI, name, lastName1, lastName2, type, password, mobile, activo, email);
			return ((ISingleResult<Sp_Update_UsuerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Usuer")]
		public ISingleResult<Sp_Delete_UsuerResult> Sp_Delete_Usuer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idUsuario, activo);
			return ((ISingleResult<Sp_Delete_UsuerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Doctor")]
		public ISingleResult<Sp_Delete_DoctorResult> Sp_Delete_Doctor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDoctor, activo);
			return ((ISingleResult<Sp_Delete_DoctorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Empresa")]
		public ISingleResult<Sp_Delete_EmpresaResult> Sp_Delete_Empresa([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompany", DbType="Int")] System.Nullable<int> iDCompany, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompany, activo);
			return ((ISingleResult<Sp_Delete_EmpresaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Menu")]
		public ISingleResult<Sp_Insert_MenuResult> Sp_Insert_Menu([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeUser", DbType="Int")] System.Nullable<int> typeUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Menu", DbType="VarChar(50)")] string menu, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="URL", DbType="VarChar(50)")] string uRL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Icono", DbType="VarChar(50)")] string icono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeUser, menu, uRL, icono, activo);
			return ((ISingleResult<Sp_Insert_MenuResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Menu")]
		public ISingleResult<Sp_Update_MenuResult> Sp_Update_Menu([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeUser", DbType="Int")] System.Nullable<int> typeUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Menu", DbType="VarChar(50)")] string menu, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="URL", DbType="VarChar(50)")] string uRL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Icono", DbType="VarChar(50)")] string icono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, typeUser, menu, uRL, icono, activo);
			return ((ISingleResult<Sp_Update_MenuResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Menu")]
		public ISingleResult<Sp_Delete_MenuResult> Sp_Delete_Menu([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_MenuResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Trabajador")]
		public ISingleResult<Sp_Delete_TrabajadorResult> Sp_Delete_Trabajador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdTrabajador", DbType="Int")] System.Nullable<int> idTrabajador, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idTrabajador, activo);
			return ((ISingleResult<Sp_Delete_TrabajadorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Ocupacion")]
		public ISingleResult<Sp_Update_OcupacionResult> Sp_Update_Ocupacion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Occupation", DbType="VarChar(16)")] string occupation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, occupation, activo);
			return ((ISingleResult<Sp_Update_OcupacionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Ocupacion")]
		public ISingleResult<Sp_Insert_OcupacionResult> Sp_Insert_Ocupacion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Occupation", DbType="VarChar(16)")] string occupation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), occupation, activo);
			return ((ISingleResult<Sp_Insert_OcupacionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Ocupacion")]
		public ISingleResult<Sp_Delete_OcupacionResult> Sp_Delete_Ocupacion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_OcupacionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Guardia")]
		public ISingleResult<Sp_Delete_GuardiaResult> Sp_Delete_Guardia([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_GuardiaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Guardia")]
		public ISingleResult<Sp_Insert_GuardiaResult> Sp_Insert_Guardia([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="VarChar(16)")] string schedule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schedule, activo);
			return ((ISingleResult<Sp_Insert_GuardiaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Guardia")]
		public ISingleResult<Sp_Update_GuardiaResult> Sp_Update_Guardia([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="VarChar(16)")] string schedule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, schedule, activo);
			return ((ISingleResult<Sp_Update_GuardiaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Condicion")]
		public ISingleResult<Sp_Delete_CondicionResult> Sp_Delete_Condicion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_CondicionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_FactorRiesgo")]
		public ISingleResult<Sp_Delete_FactorRiesgoResult> Sp_Delete_FactorRiesgo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_FactorRiesgoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Condicion")]
		public ISingleResult<Sp_Insert_CondicionResult> Sp_Insert_Condicion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RiskFactor", DbType="VarChar(16)")] string riskFactor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), riskFactor, activo);
			return ((ISingleResult<Sp_Insert_CondicionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_FactorRiesgo")]
		public ISingleResult<Sp_Insert_FactorRiesgoResult> Sp_Insert_FactorRiesgo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RiskFactor", DbType="VarChar(16)")] string riskFactor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), riskFactor, activo);
			return ((ISingleResult<Sp_Insert_FactorRiesgoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Condicion")]
		public ISingleResult<Sp_Update_CondicionResult> Sp_Update_Condicion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkCondition", DbType="VarChar(16)")] string workCondition, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, workCondition, activo);
			return ((ISingleResult<Sp_Update_CondicionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_FactorRiesgo")]
		public ISingleResult<Sp_Update_FactorRiesgoResult> Sp_Update_FactorRiesgo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RiskFactor", DbType="VarChar(16)")] string riskFactor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, riskFactor, activo);
			return ((ISingleResult<Sp_Update_FactorRiesgoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_MarcaModelo")]
		public ISingleResult<Sp_Delete_MarcaModeloResult> Sp_Delete_MarcaModelo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activo);
			return ((ISingleResult<Sp_Delete_MarcaModeloResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_MarcaModelo")]
		public ISingleResult<Sp_Insert_MarcaModeloResult> Sp_Insert_MarcaModelo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Brand", DbType="VarChar(16)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Model", DbType="VarChar(16)")] string model, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brand, model, activo);
			return ((ISingleResult<Sp_Insert_MarcaModeloResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_MarcaModelo")]
		public ISingleResult<Sp_Update_MarcaModeloResult> Sp_Update_MarcaModelo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Brand", DbType="VarChar(30)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Model", DbType="VarChar(30)")] string model, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, brand, model, activo);
			return ((ISingleResult<Sp_Update_MarcaModeloResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Doctor")]
		public ISingleResult<Sp_Update_DoctorResult> Sp_Update_Doctor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDoctor", DbType="Int")] System.Nullable<int> idDoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNIdoctor", DbType="VarChar(16)")] string dNIdoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Specialism", DbType="VarChar(30)")] string specialism, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CMP", DbType="VarChar(10)")] string cMP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RENumber", DbType="VarChar(10)")] string rENumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDoctor, dNIdoctor, specialism, cMP, rENumber, company, activo);
			return ((ISingleResult<Sp_Update_DoctorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Doctor")]
		public ISingleResult<Sp_Insert_DoctorResult> Sp_Insert_Doctor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNIdoctor", DbType="VarChar(16)")] string dNIdoctor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Specialism", DbType="VarChar(30)")] string specialism, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CMP", DbType="VarChar(10)")] string cMP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RENumber", DbType="VarChar(10)")] string rENumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dNIdoctor, specialism, cMP, rENumber, company, activo);
			return ((ISingleResult<Sp_Insert_DoctorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Actividad")]
		public ISingleResult<Sp_Delete_ActividadResult> Sp_Delete_Actividad([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDactivity", DbType="Int")] System.Nullable<int> iDactivity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDactivity, activo);
			return ((ISingleResult<Sp_Delete_ActividadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Actividad")]
		public ISingleResult<Sp_Insert_ActividadResult> Sp_Insert_Actividad([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompany", DbType="Int")] System.Nullable<int> iDCompany, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="VarChar(10)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contract", DbType="Int")] System.Nullable<int> contract, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartHour", DbType="VarChar(10)")] string startHour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishHour", DbType="VarChar(10)")] string finishHour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respirator", DbType="Int")] System.Nullable<int> respirator, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filter", DbType="Int")] System.Nullable<int> filter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Supervisor", DbType="VarChar(30)")] string supervisor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(30)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompany, date, contract, startHour, finishHour, respirator, filter, quantity, supervisor, description, activo);
			return ((ISingleResult<Sp_Insert_ActividadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Actividad")]
		public ISingleResult<Sp_Update_ActividadResult> Sp_Update_Actividad([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDactivity", DbType="Int")] System.Nullable<int> iDactivity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompany", DbType="Int")] System.Nullable<int> iDCompany, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="VarChar(10)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contract", DbType="Int")] System.Nullable<int> contract, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartHour", DbType="VarChar(10)")] string startHour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishHour", DbType="VarChar(10)")] string finishHour, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respirator", DbType="Int")] System.Nullable<int> respirator, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filter", DbType="Int")] System.Nullable<int> filter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Supervisor", DbType="VarChar(30)")] string supervisor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(30)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDactivity, iDCompany, date, contract, startHour, finishHour, respirator, filter, quantity, supervisor, description, activo);
			return ((ISingleResult<Sp_Update_ActividadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Delete_Contrato")]
		public ISingleResult<Sp_Delete_ContratoResult> Sp_Delete_Contrato([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDContract", DbType="Int")] System.Nullable<int> iDContract, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDContract, activo);
			return ((ISingleResult<Sp_Delete_ContratoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Empresa")]
		public ISingleResult<Sp_Insert_EmpresaResult> Sp_Insert_Empresa([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RUC", DbType="VarChar(24)")] string rUC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tradename", DbType="VarChar(50)")] string tradename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contactname", DbType="VarChar(30)")] string contactname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactLastname", DbType="VarChar(30)")] string contactLastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactLastname2", DbType="VarChar(30)")] string contactLastname2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cellphone", DbType="VarChar(20)")] string cellphone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rUC, name, tradename, address, contactname, contactLastname, contactLastname2, cellphone, email, activo);
			return ((ISingleResult<Sp_Insert_EmpresaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Empresa")]
		public ISingleResult<Sp_Update_EmpresaResult> Sp_Update_Empresa([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCompany", DbType="Int")] System.Nullable<int> iDCompany, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RUC", DbType="VarChar(24)")] string rUC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tradename", DbType="VarChar(50)")] string tradename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contactname", DbType="VarChar(30)")] string contactname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactLastname", DbType="VarChar(30)")] string contactLastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactLastname2", DbType="VarChar(30)")] string contactLastname2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cellphone", DbType="VarChar(20)")] string cellphone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCompany, rUC, name, tradename, address, contactname, contactLastname, contactLastname2, cellphone, email, activo);
			return ((ISingleResult<Sp_Update_EmpresaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_LoginUsuer")]
		public ISingleResult<Sp_LoginUsuerResult> Sp_LoginUsuer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(20)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, password);
			return ((ISingleResult<Sp_LoginUsuerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Contrato")]
		public ISingleResult<Sp_Insert_ContratoResult> Sp_Insert_Contrato([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraegerUser", DbType="VarChar(16)")] string draegerUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Int")] System.Nullable<int> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialDate", DbType="VarChar(16)")] string initialDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinalDate", DbType="VarChar(16)")] string finalDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dascription", DbType="VarChar(100)")] string dascription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celular", DbType="Int")] System.Nullable<int> celular, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(150)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draegerUser, amount, company, initialDate, finalDate, quantity, dascription, celular, email, activo);
			return ((ISingleResult<Sp_Insert_ContratoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Contrato")]
		public ISingleResult<Sp_Update_ContratoResult> Sp_Update_Contrato([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDContract", DbType="Int")] System.Nullable<int> iDContract, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraegerUser", DbType="VarChar(16)")] string draegerUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Int")] System.Nullable<int> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialDate", DbType="VarChar(16)")] string initialDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinalDate", DbType="VarChar(16)")] string finalDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dascription", DbType="VarChar(100)")] string dascription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celular", DbType="Int")] System.Nullable<int> celular, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(150)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDContract, draegerUser, amount, company, initialDate, finalDate, quantity, dascription, celular, email, activo);
			return ((ISingleResult<Sp_Update_ContratoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Update_Trabajador")]
		public ISingleResult<Sp_Update_TrabajadorResult> Sp_Update_Trabajador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdTrabajador", DbType="Int")] System.Nullable<int> idTrabajador, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNIemployee", DbType="VarChar(16)")] string dNIemployee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthdate", DbType="VarChar(10)")] string birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Occupation", DbType="Int")] System.Nullable<int> occupation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="Int")] System.Nullable<int> schedule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkCondition", DbType="Int")] System.Nullable<int> workCondition, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RiskFactor", DbType="Int")] System.Nullable<int> riskFactor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idTrabajador, dNIemployee, birthdate, occupation, schedule, company, workCondition, riskFactor, name, activo);
			return ((ISingleResult<Sp_Update_TrabajadorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_Insert_Trabajador")]
		public ISingleResult<Sp_Insert_TrabajadorResult> Sp_Insert_Trabajador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DNIemployee", DbType="VarChar(16)")] string dNIemployee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthdate", DbType="VarChar(10)")] string birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Occupation", DbType="Int")] System.Nullable<int> occupation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="Int")] System.Nullable<int> schedule, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="Int")] System.Nullable<int> company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkCondition", DbType="Int")] System.Nullable<int> workCondition, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RiskFactor", DbType="Int")] System.Nullable<int> riskFactor, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activo", DbType="Bit")] System.Nullable<bool> activo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dNIemployee, birthdate, occupation, schedule, company, workCondition, riskFactor, name, activo);
			return ((ISingleResult<Sp_Insert_TrabajadorResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserType1;
		
		private EntitySet<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserType1Changing(string value);
    partial void OnUserType1Changed();
    #endregion
		
		public UserType()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserType", Storage="_UserType1", DbType="VarChar(30)")]
		public string UserType1
		{
			get
			{
				return this._UserType1;
			}
			set
			{
				if ((this._UserType1 != value))
				{
					this.OnUserType1Changing(value);
					this.SendPropertyChanging();
					this._UserType1 = value;
					this.SendPropertyChanged("UserType1");
					this.OnUserType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_User", ThisKey="ID", OtherKey="Type")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _DNI;
		
		private string _Name;
		
		private string _LastName1;
		
		private string _LastName2;
		
		private int _Type;
		
		private string _Password;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.DateTime _RegisterDate;
		
		private System.Nullable<System.DateTime> _LastAccesDate;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Doctor> _Doctor;
		
		private EntitySet<Contract> _Contract;
		
		private EntityRef<UserType> _UserType;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLastName1Changing(string value);
    partial void OnLastName1Changed();
    partial void OnLastName2Changing(string value);
    partial void OnLastName2Changed();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRegisterDateChanging(System.DateTime value);
    partial void OnRegisterDateChanged();
    partial void OnLastAccesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccesDateChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public User()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			this._Contract = new EntitySet<Contract>(new Action<Contract>(this.attach_Contract), new Action<Contract>(this.detach_Contract));
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="NChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName1
		{
			get
			{
				return this._LastName1;
			}
			set
			{
				if ((this._LastName1 != value))
				{
					this.OnLastName1Changing(value);
					this.SendPropertyChanging();
					this._LastName1 = value;
					this.SendPropertyChanged("LastName1");
					this.OnLastName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName2
		{
			get
			{
				return this._LastName2;
			}
			set
			{
				if ((this._LastName2 != value))
				{
					this.OnLastName2Changing(value);
					this.SendPropertyChanging();
					this._LastName2 = value;
					this.SendPropertyChanged("LastName2");
					this.OnLastName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="Date NOT NULL")]
		public System.DateTime RegisterDate
		{
			get
			{
				return this._RegisterDate;
			}
			set
			{
				if ((this._RegisterDate != value))
				{
					this.OnRegisterDateChanging(value);
					this.SendPropertyChanging();
					this._RegisterDate = value;
					this.SendPropertyChanged("RegisterDate");
					this.OnRegisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccesDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastAccesDate
		{
			get
			{
				return this._LastAccesDate;
			}
			set
			{
				if ((this._LastAccesDate != value))
				{
					this.OnLastAccesDateChanging(value);
					this.SendPropertyChanging();
					this._LastAccesDate = value;
					this.SendPropertyChanged("LastAccesDate");
					this.OnLastAccesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Doctor", Storage="_Doctor", ThisKey="DNI", OtherKey="DNIdoctor")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Contract", Storage="_Contract", ThisKey="DNI", OtherKey="DraegerUser")]
		public EntitySet<Contract> Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				this._Contract.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_UserType", ThisKey="Type", OtherKey="ID", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.User.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._Type = value.ID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Contract(Contract entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Contract(Contract entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDoctor;
		
		private string _DNIdoctor;
		
		private string _Specialism;
		
		private string _CMP;
		
		private string _RENumber;
		
		private int _Company;
		
		private System.Nullable<bool> _Activo;
		
		private EntityRef<User> _User;
		
		private EntityRef<Company> _Company1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDoctorChanging(int value);
    partial void OnIdDoctorChanged();
    partial void OnDNIdoctorChanging(string value);
    partial void OnDNIdoctorChanged();
    partial void OnSpecialismChanging(string value);
    partial void OnSpecialismChanged();
    partial void OnCMPChanging(string value);
    partial void OnCMPChanged();
    partial void OnRENumberChanging(string value);
    partial void OnRENumberChanged();
    partial void OnCompanyChanging(int value);
    partial void OnCompanyChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Doctor()
		{
			this._User = default(EntityRef<User>);
			this._Company1 = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoctor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDoctor
		{
			get
			{
				return this._IdDoctor;
			}
			set
			{
				if ((this._IdDoctor != value))
				{
					this.OnIdDoctorChanging(value);
					this.SendPropertyChanging();
					this._IdDoctor = value;
					this.SendPropertyChanged("IdDoctor");
					this.OnIdDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNIdoctor", DbType="NChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DNIdoctor
		{
			get
			{
				return this._DNIdoctor;
			}
			set
			{
				if ((this._DNIdoctor != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDNIdoctorChanging(value);
					this.SendPropertyChanging();
					this._DNIdoctor = value;
					this.SendPropertyChanged("DNIdoctor");
					this.OnDNIdoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialism", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Specialism
		{
			get
			{
				return this._Specialism;
			}
			set
			{
				if ((this._Specialism != value))
				{
					this.OnSpecialismChanging(value);
					this.SendPropertyChanging();
					this._Specialism = value;
					this.SendPropertyChanged("Specialism");
					this.OnSpecialismChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMP", DbType="Char(10)")]
		public string CMP
		{
			get
			{
				return this._CMP;
			}
			set
			{
				if ((this._CMP != value))
				{
					this.OnCMPChanging(value);
					this.SendPropertyChanging();
					this._CMP = value;
					this.SendPropertyChanged("CMP");
					this.OnCMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RENumber", DbType="Char(10)")]
		public string RENumber
		{
			get
			{
				return this._RENumber;
			}
			set
			{
				if ((this._RENumber != value))
				{
					this.OnRENumberChanging(value);
					this.SendPropertyChanging();
					this._RENumber = value;
					this.SendPropertyChanged("RENumber");
					this.OnRENumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="Int NOT NULL")]
		public int Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					if (this._Company1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Doctor", Storage="_User", ThisKey="DNIdoctor", OtherKey="DNI", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._DNIdoctor = value.DNI;
					}
					else
					{
						this._DNIdoctor = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Doctor", Storage="_Company1", ThisKey="Company", OtherKey="IDCompany", IsForeignKey=true)]
		public Company Company1
		{
			get
			{
				return this._Company1.Entity;
			}
			set
			{
				Company previousValue = this._Company1.Entity;
				if (((previousValue != value) 
							|| (this._Company1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company1.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Company1.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._Company = value.IDCompany;
					}
					else
					{
						this._Company = default(int);
					}
					this.SendPropertyChanged("Company1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCompany;
		
		private string _RUC;
		
		private string _Name;
		
		private string _Tradename;
		
		private string _Address;
		
		private string _Contactname;
		
		private string _ContactLastname;
		
		private string _ContactLastname2;
		
		private string _Cellphone;
		
		private string _Email;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Doctor> _Doctor;
		
		private EntitySet<Activity> _Activity;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCompanyChanging(int value);
    partial void OnIDCompanyChanged();
    partial void OnRUCChanging(string value);
    partial void OnRUCChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTradenameChanging(string value);
    partial void OnTradenameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactnameChanging(string value);
    partial void OnContactnameChanged();
    partial void OnContactLastnameChanging(string value);
    partial void OnContactLastnameChanged();
    partial void OnContactLastname2Changing(string value);
    partial void OnContactLastname2Changed();
    partial void OnCellphoneChanging(string value);
    partial void OnCellphoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Company()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RUC", DbType="NChar(12) NOT NULL", CanBeNull=false)]
		public string RUC
		{
			get
			{
				return this._RUC;
			}
			set
			{
				if ((this._RUC != value))
				{
					this.OnRUCChanging(value);
					this.SendPropertyChanging();
					this._RUC = value;
					this.SendPropertyChanged("RUC");
					this.OnRUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tradename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tradename
		{
			get
			{
				return this._Tradename;
			}
			set
			{
				if ((this._Tradename != value))
				{
					this.OnTradenameChanging(value);
					this.SendPropertyChanging();
					this._Tradename = value;
					this.SendPropertyChanged("Tradename");
					this.OnTradenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contactname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Contactname
		{
			get
			{
				return this._Contactname;
			}
			set
			{
				if ((this._Contactname != value))
				{
					this.OnContactnameChanging(value);
					this.SendPropertyChanging();
					this._Contactname = value;
					this.SendPropertyChanged("Contactname");
					this.OnContactnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactLastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ContactLastname
		{
			get
			{
				return this._ContactLastname;
			}
			set
			{
				if ((this._ContactLastname != value))
				{
					this.OnContactLastnameChanging(value);
					this.SendPropertyChanging();
					this._ContactLastname = value;
					this.SendPropertyChanged("ContactLastname");
					this.OnContactLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactLastname2", DbType="VarChar(30)")]
		public string ContactLastname2
		{
			get
			{
				return this._ContactLastname2;
			}
			set
			{
				if ((this._ContactLastname2 != value))
				{
					this.OnContactLastname2Changing(value);
					this.SendPropertyChanging();
					this._ContactLastname2 = value;
					this.SendPropertyChanged("ContactLastname2");
					this.OnContactLastname2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cellphone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Cellphone
		{
			get
			{
				return this._Cellphone;
			}
			set
			{
				if ((this._Cellphone != value))
				{
					this.OnCellphoneChanging(value);
					this.SendPropertyChanging();
					this._Cellphone = value;
					this.SendPropertyChanged("Cellphone");
					this.OnCellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Doctor", Storage="_Doctor", ThisKey="IDCompany", OtherKey="Company")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Activity", Storage="_Activity", ThisKey="IDCompany", OtherKey="IDCompany")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Company1 = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Company1 = null;
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TypeUser;
		
		private string _Menu1;
		
		private string _URL;
		
		private string _Icono;
		
		private System.Nullable<bool> _Activo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeUserChanging(int value);
    partial void OnTypeUserChanged();
    partial void OnMenu1Changing(string value);
    partial void OnMenu1Changed();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnIconoChanging(string value);
    partial void OnIconoChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeUser", DbType="Int NOT NULL")]
		public int TypeUser
		{
			get
			{
				return this._TypeUser;
			}
			set
			{
				if ((this._TypeUser != value))
				{
					this.OnTypeUserChanging(value);
					this.SendPropertyChanging();
					this._TypeUser = value;
					this.SendPropertyChanged("TypeUser");
					this.OnTypeUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Menu", Storage="_Menu1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Menu1
		{
			get
			{
				return this._Menu1;
			}
			set
			{
				if ((this._Menu1 != value))
				{
					this.OnMenu1Changing(value);
					this.SendPropertyChanging();
					this._Menu1 = value;
					this.SendPropertyChanged("Menu1");
					this.OnMenu1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(50)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icono", DbType="VarChar(50)")]
		public string Icono
		{
			get
			{
				return this._Icono;
			}
			set
			{
				if ((this._Icono != value))
				{
					this.OnIconoChanging(value);
					this.SendPropertyChanging();
					this._Icono = value;
					this.SendPropertyChanged("Icono");
					this.OnIconoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTrabajador;
		
		private string _DNIemployee;
		
		private System.DateTime _Birthdate;
		
		private int _Occupation;
		
		private int _Schedule;
		
		private int _Company;
		
		private int _WorkCondition;
		
		private System.DateTime _DateEntry;
		
		private int _RiskFactor;
		
		private string _Name;
		
		private System.Nullable<bool> _Activo;
		
		private EntityRef<RiskFactor> _RiskFactor1;
		
		private EntityRef<OccupationType> _OccupationType;
		
		private EntityRef<Schedule> _Schedule1;
		
		private EntityRef<WorkCondition> _WorkCondition1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrabajadorChanging(int value);
    partial void OnIdTrabajadorChanged();
    partial void OnDNIemployeeChanging(string value);
    partial void OnDNIemployeeChanged();
    partial void OnBirthdateChanging(System.DateTime value);
    partial void OnBirthdateChanged();
    partial void OnOccupationChanging(int value);
    partial void OnOccupationChanged();
    partial void OnScheduleChanging(int value);
    partial void OnScheduleChanged();
    partial void OnCompanyChanging(int value);
    partial void OnCompanyChanged();
    partial void OnWorkConditionChanging(int value);
    partial void OnWorkConditionChanged();
    partial void OnDateEntryChanging(System.DateTime value);
    partial void OnDateEntryChanged();
    partial void OnRiskFactorChanging(int value);
    partial void OnRiskFactorChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Employee()
		{
			this._RiskFactor1 = default(EntityRef<RiskFactor>);
			this._OccupationType = default(EntityRef<OccupationType>);
			this._Schedule1 = default(EntityRef<Schedule>);
			this._WorkCondition1 = default(EntityRef<WorkCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrabajador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTrabajador
		{
			get
			{
				return this._IdTrabajador;
			}
			set
			{
				if ((this._IdTrabajador != value))
				{
					this.OnIdTrabajadorChanging(value);
					this.SendPropertyChanging();
					this._IdTrabajador = value;
					this.SendPropertyChanged("IdTrabajador");
					this.OnIdTrabajadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNIemployee", DbType="NChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DNIemployee
		{
			get
			{
				return this._DNIemployee;
			}
			set
			{
				if ((this._DNIemployee != value))
				{
					this.OnDNIemployeeChanging(value);
					this.SendPropertyChanging();
					this._DNIemployee = value;
					this.SendPropertyChanged("DNIemployee");
					this.OnDNIemployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="Date NOT NULL")]
		public System.DateTime Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="Int NOT NULL")]
		public int Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					if (this._OccupationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="Int NOT NULL")]
		public int Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					if (this._Schedule1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="Int NOT NULL")]
		public int Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCondition", DbType="Int NOT NULL")]
		public int WorkCondition
		{
			get
			{
				return this._WorkCondition;
			}
			set
			{
				if ((this._WorkCondition != value))
				{
					if (this._WorkCondition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkConditionChanging(value);
					this.SendPropertyChanging();
					this._WorkCondition = value;
					this.SendPropertyChanged("WorkCondition");
					this.OnWorkConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEntry", DbType="Date NOT NULL")]
		public System.DateTime DateEntry
		{
			get
			{
				return this._DateEntry;
			}
			set
			{
				if ((this._DateEntry != value))
				{
					this.OnDateEntryChanging(value);
					this.SendPropertyChanging();
					this._DateEntry = value;
					this.SendPropertyChanged("DateEntry");
					this.OnDateEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskFactor", DbType="Int NOT NULL")]
		public int RiskFactor
		{
			get
			{
				return this._RiskFactor;
			}
			set
			{
				if ((this._RiskFactor != value))
				{
					if (this._RiskFactor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRiskFactorChanging(value);
					this.SendPropertyChanging();
					this._RiskFactor = value;
					this.SendPropertyChanged("RiskFactor");
					this.OnRiskFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RiskFactor_Employee", Storage="_RiskFactor1", ThisKey="RiskFactor", OtherKey="ID", IsForeignKey=true)]
		public RiskFactor RiskFactor1
		{
			get
			{
				return this._RiskFactor1.Entity;
			}
			set
			{
				RiskFactor previousValue = this._RiskFactor1.Entity;
				if (((previousValue != value) 
							|| (this._RiskFactor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RiskFactor1.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._RiskFactor1.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._RiskFactor = value.ID;
					}
					else
					{
						this._RiskFactor = default(int);
					}
					this.SendPropertyChanged("RiskFactor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OccupationType_Employee", Storage="_OccupationType", ThisKey="Occupation", OtherKey="ID", IsForeignKey=true)]
		public OccupationType OccupationType
		{
			get
			{
				return this._OccupationType.Entity;
			}
			set
			{
				OccupationType previousValue = this._OccupationType.Entity;
				if (((previousValue != value) 
							|| (this._OccupationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OccupationType.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._OccupationType.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._Occupation = value.ID;
					}
					else
					{
						this._Occupation = default(int);
					}
					this.SendPropertyChanged("OccupationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Employee", Storage="_Schedule1", ThisKey="Schedule", OtherKey="ID", IsForeignKey=true)]
		public Schedule Schedule1
		{
			get
			{
				return this._Schedule1.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule1.Entity;
				if (((previousValue != value) 
							|| (this._Schedule1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule1.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Schedule1.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._Schedule = value.ID;
					}
					else
					{
						this._Schedule = default(int);
					}
					this.SendPropertyChanged("Schedule1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkCondition_Employee", Storage="_WorkCondition1", ThisKey="WorkCondition", OtherKey="ID", IsForeignKey=true)]
		public WorkCondition WorkCondition1
		{
			get
			{
				return this._WorkCondition1.Entity;
			}
			set
			{
				WorkCondition previousValue = this._WorkCondition1.Entity;
				if (((previousValue != value) 
							|| (this._WorkCondition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkCondition1.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._WorkCondition1.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._WorkCondition = value.ID;
					}
					else
					{
						this._WorkCondition = default(int);
					}
					this.SendPropertyChanged("WorkCondition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RiskFactor")]
	public partial class RiskFactor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RiskFactor1;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Employee> _Employee;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRiskFactor1Changing(string value);
    partial void OnRiskFactor1Changed();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public RiskFactor()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RiskFactor", Storage="_RiskFactor1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RiskFactor1
		{
			get
			{
				return this._RiskFactor1;
			}
			set
			{
				if ((this._RiskFactor1 != value))
				{
					this.OnRiskFactor1Changing(value);
					this.SendPropertyChanging();
					this._RiskFactor1 = value;
					this.SendPropertyChanged("RiskFactor1");
					this.OnRiskFactor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RiskFactor_Employee", Storage="_Employee", ThisKey="ID", OtherKey="RiskFactor")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.RiskFactor1 = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.RiskFactor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OccupationType")]
	public partial class OccupationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Occupation;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Employee> _Employee;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public OccupationType()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OccupationType_Employee", Storage="_Employee", ThisKey="ID", OtherKey="Occupation")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.OccupationType = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.OccupationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Schedule1;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Employee> _Employee;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSchedule1Changing(string value);
    partial void OnSchedule1Changed();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Schedule()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Schedule", Storage="_Schedule1", DbType="VarChar(30)")]
		public string Schedule1
		{
			get
			{
				return this._Schedule1;
			}
			set
			{
				if ((this._Schedule1 != value))
				{
					this.OnSchedule1Changing(value);
					this.SendPropertyChanging();
					this._Schedule1 = value;
					this.SendPropertyChanged("Schedule1");
					this.OnSchedule1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Employee", Storage="_Employee", ThisKey="ID", OtherKey="Schedule")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Schedule1 = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Schedule1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkCondition")]
	public partial class WorkCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WorkCondition1;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Employee> _Employee;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkCondition1Changing(string value);
    partial void OnWorkCondition1Changed();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public WorkCondition()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WorkCondition", Storage="_WorkCondition1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkCondition1
		{
			get
			{
				return this._WorkCondition1;
			}
			set
			{
				if ((this._WorkCondition1 != value))
				{
					this.OnWorkCondition1Changing(value);
					this.SendPropertyChanging();
					this._WorkCondition1 = value;
					this.SendPropertyChanged("WorkCondition1");
					this.OnWorkCondition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkCondition_Employee", Storage="_Employee", ThisKey="ID", OtherKey="WorkCondition")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.WorkCondition1 = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.WorkCondition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Respirator")]
	public partial class Respirator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Brand;
		
		private string _Model;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Activity> _Activity;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Respirator()
		{
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Respirator_Activity", Storage="_Activity", ThisKey="ID", OtherKey="Respirator")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Respirator1 = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Respirator1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDactivity;
		
		private int _IDCompany;
		
		private System.DateTime _Date;
		
		private int _Contract;
		
		private System.TimeSpan _StartHour;
		
		private System.TimeSpan _FinishHour;
		
		private int _Respirator;
		
		private int _Filter;
		
		private int _Quantity;
		
		private string _Supervisor;
		
		private string _Description;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<IndicatorSingle> _IndicatorSingle;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Respirator> _Respirator1;
		
		private EntityRef<Filter> _Filter1;
		
		private EntityRef<Contract> _Contract1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDactivityChanging(int value);
    partial void OnIDactivityChanged();
    partial void OnIDCompanyChanging(int value);
    partial void OnIDCompanyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnContractChanging(int value);
    partial void OnContractChanged();
    partial void OnStartHourChanging(System.TimeSpan value);
    partial void OnStartHourChanged();
    partial void OnFinishHourChanging(System.TimeSpan value);
    partial void OnFinishHourChanged();
    partial void OnRespiratorChanging(int value);
    partial void OnRespiratorChanged();
    partial void OnFilterChanging(int value);
    partial void OnFilterChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnSupervisorChanging(string value);
    partial void OnSupervisorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Activity()
		{
			this._IndicatorSingle = new EntitySet<IndicatorSingle>(new Action<IndicatorSingle>(this.attach_IndicatorSingle), new Action<IndicatorSingle>(this.detach_IndicatorSingle));
			this._Company = default(EntityRef<Company>);
			this._Respirator1 = default(EntityRef<Respirator>);
			this._Filter1 = default(EntityRef<Filter>);
			this._Contract1 = default(EntityRef<Contract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDactivity", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDactivity
		{
			get
			{
				return this._IDactivity;
			}
			set
			{
				if ((this._IDactivity != value))
				{
					this.OnIDactivityChanging(value);
					this.SendPropertyChanging();
					this._IDactivity = value;
					this.SendPropertyChanged("IDactivity");
					this.OnIDactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int NOT NULL")]
		public int IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract", DbType="Int NOT NULL")]
		public int Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					if (this._Contract1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractChanging(value);
					this.SendPropertyChanging();
					this._Contract = value;
					this.SendPropertyChanged("Contract");
					this.OnContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartHour", DbType="Time NOT NULL")]
		public System.TimeSpan StartHour
		{
			get
			{
				return this._StartHour;
			}
			set
			{
				if ((this._StartHour != value))
				{
					this.OnStartHourChanging(value);
					this.SendPropertyChanging();
					this._StartHour = value;
					this.SendPropertyChanged("StartHour");
					this.OnStartHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishHour", DbType="Time NOT NULL")]
		public System.TimeSpan FinishHour
		{
			get
			{
				return this._FinishHour;
			}
			set
			{
				if ((this._FinishHour != value))
				{
					this.OnFinishHourChanging(value);
					this.SendPropertyChanging();
					this._FinishHour = value;
					this.SendPropertyChanged("FinishHour");
					this.OnFinishHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respirator", DbType="Int NOT NULL")]
		public int Respirator
		{
			get
			{
				return this._Respirator;
			}
			set
			{
				if ((this._Respirator != value))
				{
					if (this._Respirator1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRespiratorChanging(value);
					this.SendPropertyChanging();
					this._Respirator = value;
					this.SendPropertyChanged("Respirator");
					this.OnRespiratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter", DbType="Int NOT NULL")]
		public int Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					if (this._Filter1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilterChanging(value);
					this.SendPropertyChanging();
					this._Filter = value;
					this.SendPropertyChanged("Filter");
					this.OnFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supervisor", DbType="VarChar(50)")]
		public string Supervisor
		{
			get
			{
				return this._Supervisor;
			}
			set
			{
				if ((this._Supervisor != value))
				{
					this.OnSupervisorChanging(value);
					this.SendPropertyChanging();
					this._Supervisor = value;
					this.SendPropertyChanged("Supervisor");
					this.OnSupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_IndicatorSingle", Storage="_IndicatorSingle", ThisKey="IDactivity", OtherKey="IDactivity")]
		public EntitySet<IndicatorSingle> IndicatorSingle
		{
			get
			{
				return this._IndicatorSingle;
			}
			set
			{
				this._IndicatorSingle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Activity", Storage="_Company", ThisKey="IDCompany", OtherKey="IDCompany", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._IDCompany = value.IDCompany;
					}
					else
					{
						this._IDCompany = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Respirator_Activity", Storage="_Respirator1", ThisKey="Respirator", OtherKey="ID", IsForeignKey=true)]
		public Respirator Respirator1
		{
			get
			{
				return this._Respirator1.Entity;
			}
			set
			{
				Respirator previousValue = this._Respirator1.Entity;
				if (((previousValue != value) 
							|| (this._Respirator1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Respirator1.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Respirator1.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._Respirator = value.ID;
					}
					else
					{
						this._Respirator = default(int);
					}
					this.SendPropertyChanged("Respirator1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_Activity", Storage="_Filter1", ThisKey="Filter", OtherKey="IDFilter", IsForeignKey=true)]
		public Filter Filter1
		{
			get
			{
				return this._Filter1.Entity;
			}
			set
			{
				Filter previousValue = this._Filter1.Entity;
				if (((previousValue != value) 
							|| (this._Filter1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filter1.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Filter1.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._Filter = value.IDFilter;
					}
					else
					{
						this._Filter = default(int);
					}
					this.SendPropertyChanged("Filter1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Activity", Storage="_Contract1", ThisKey="Contract", OtherKey="IDContract", IsForeignKey=true)]
		public Contract Contract1
		{
			get
			{
				return this._Contract1.Entity;
			}
			set
			{
				Contract previousValue = this._Contract1.Entity;
				if (((previousValue != value) 
							|| (this._Contract1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract1.Entity = null;
						previousValue.Activity.Remove(this);
					}
					this._Contract1.Entity = value;
					if ((value != null))
					{
						value.Activity.Add(this);
						this._Contract = value.IDContract;
					}
					else
					{
						this._Contract = default(int);
					}
					this.SendPropertyChanged("Contract1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IndicatorSingle(IndicatorSingle entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_IndicatorSingle(IndicatorSingle entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Filter")]
	public partial class Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilter;
		
		private string _Filter1;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Activity> _Activity;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilterChanging(int value);
    partial void OnIDFilterChanged();
    partial void OnFilter1Changing(string value);
    partial void OnFilter1Changed();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Filter()
		{
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilter", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFilter
		{
			get
			{
				return this._IDFilter;
			}
			set
			{
				if ((this._IDFilter != value))
				{
					this.OnIDFilterChanging(value);
					this.SendPropertyChanging();
					this._IDFilter = value;
					this.SendPropertyChanged("IDFilter");
					this.OnIDFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Filter", Storage="_Filter1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Filter1
		{
			get
			{
				return this._Filter1;
			}
			set
			{
				if ((this._Filter1 != value))
				{
					this.OnFilter1Changing(value);
					this.SendPropertyChanging();
					this._Filter1 = value;
					this.SendPropertyChanged("Filter1");
					this.OnFilter1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_Activity", Storage="_Activity", ThisKey="IDFilter", OtherKey="Filter")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Filter1 = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Filter1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDContract;
		
		private string _DraegerUser;
		
		private int _Amount;
		
		private int _Company;
		
		private System.DateTime _InitialDate;
		
		private System.DateTime _FinalDate;
		
		private int _Quantity;
		
		private string _Dascription;
		
		private System.Nullable<int> _Celular;
		
		private string _Email;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<Activity> _Activity;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDContractChanging(int value);
    partial void OnIDContractChanged();
    partial void OnDraegerUserChanging(string value);
    partial void OnDraegerUserChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnCompanyChanging(int value);
    partial void OnCompanyChanged();
    partial void OnInitialDateChanging(System.DateTime value);
    partial void OnInitialDateChanged();
    partial void OnFinalDateChanging(System.DateTime value);
    partial void OnFinalDateChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDascriptionChanging(string value);
    partial void OnDascriptionChanged();
    partial void OnCelularChanging(System.Nullable<int> value);
    partial void OnCelularChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public Contract()
		{
			this._Activity = new EntitySet<Activity>(new Action<Activity>(this.attach_Activity), new Action<Activity>(this.detach_Activity));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDContract", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDContract
		{
			get
			{
				return this._IDContract;
			}
			set
			{
				if ((this._IDContract != value))
				{
					this.OnIDContractChanging(value);
					this.SendPropertyChanging();
					this._IDContract = value;
					this.SendPropertyChanged("IDContract");
					this.OnIDContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraegerUser", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string DraegerUser
		{
			get
			{
				return this._DraegerUser;
			}
			set
			{
				if ((this._DraegerUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraegerUserChanging(value);
					this.SendPropertyChanging();
					this._DraegerUser = value;
					this.SendPropertyChanged("DraegerUser");
					this.OnDraegerUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="Int NOT NULL")]
		public int Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialDate", DbType="Date NOT NULL")]
		public System.DateTime InitialDate
		{
			get
			{
				return this._InitialDate;
			}
			set
			{
				if ((this._InitialDate != value))
				{
					this.OnInitialDateChanging(value);
					this.SendPropertyChanging();
					this._InitialDate = value;
					this.SendPropertyChanged("InitialDate");
					this.OnInitialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDate", DbType="Date NOT NULL")]
		public System.DateTime FinalDate
		{
			get
			{
				return this._FinalDate;
			}
			set
			{
				if ((this._FinalDate != value))
				{
					this.OnFinalDateChanging(value);
					this.SendPropertyChanging();
					this._FinalDate = value;
					this.SendPropertyChanged("FinalDate");
					this.OnFinalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dascription", DbType="VarChar(MAX)")]
		public string Dascription
		{
			get
			{
				return this._Dascription;
			}
			set
			{
				if ((this._Dascription != value))
				{
					this.OnDascriptionChanging(value);
					this.SendPropertyChanging();
					this._Dascription = value;
					this.SendPropertyChanged("Dascription");
					this.OnDascriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="Int")]
		public System.Nullable<int> Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Activity", Storage="_Activity", ThisKey="IDContract", OtherKey="Contract")]
		public EntitySet<Activity> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				this._Activity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Contract", Storage="_User", ThisKey="DraegerUser", OtherKey="DNI", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Contract.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Contract.Add(this);
						this._DraegerUser = value.DNI;
					}
					else
					{
						this._DraegerUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = this;
		}
		
		private void detach_Activity(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Contract1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndicatorSingle")]
	public partial class IndicatorSingle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDindicator;
		
		private int _IDactivity;
		
		private string _EmployeeID;
		
		private System.DateTime _Date;
		
		private string _Filepath;
		
		private string _SerialNumber;
		
		private System.Nullable<System.TimeSpan> _TimeGood;
		
		private System.Nullable<System.TimeSpan> _TimeBad;
		
		private System.Nullable<System.TimeSpan> _TimeNotUsed;
		
		private System.Nullable<double> _MaxPressure;
		
		private System.Nullable<double> _MinPressure;
		
		private System.Nullable<double> _MaxTemperature;
		
		private System.Nullable<double> _MinTemperature;
		
		private System.Nullable<int> _MaxRH;
		
		private System.Nullable<int> _MinRH;
		
		private System.Nullable<double> _UseFactor;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDContract;
		
		private System.Nullable<int> _IdUsuario;
		
		private EntityRef<Activity> _Activity;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDindicatorChanging(int value);
    partial void OnIDindicatorChanged();
    partial void OnIDactivityChanging(int value);
    partial void OnIDactivityChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnFilepathChanging(string value);
    partial void OnFilepathChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnTimeGoodChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeGoodChanged();
    partial void OnTimeBadChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeBadChanged();
    partial void OnTimeNotUsedChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeNotUsedChanged();
    partial void OnMaxPressureChanging(System.Nullable<double> value);
    partial void OnMaxPressureChanged();
    partial void OnMinPressureChanging(System.Nullable<double> value);
    partial void OnMinPressureChanged();
    partial void OnMaxTemperatureChanging(System.Nullable<double> value);
    partial void OnMaxTemperatureChanged();
    partial void OnMinTemperatureChanging(System.Nullable<double> value);
    partial void OnMinTemperatureChanged();
    partial void OnMaxRHChanging(System.Nullable<int> value);
    partial void OnMaxRHChanged();
    partial void OnMinRHChanging(System.Nullable<int> value);
    partial void OnMinRHChanged();
    partial void OnUseFactorChanging(System.Nullable<double> value);
    partial void OnUseFactorChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    partial void OnIDContractChanging(System.Nullable<int> value);
    partial void OnIDContractChanged();
    partial void OnIdUsuarioChanging(System.Nullable<int> value);
    partial void OnIdUsuarioChanged();
    #endregion
		
		public IndicatorSingle()
		{
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDindicator", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDindicator
		{
			get
			{
				return this._IDindicator;
			}
			set
			{
				if ((this._IDindicator != value))
				{
					this.OnIDindicatorChanging(value);
					this.SendPropertyChanging();
					this._IDindicator = value;
					this.SendPropertyChanged("IDindicator");
					this.OnIDindicatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDactivity", DbType="Int NOT NULL")]
		public int IDactivity
		{
			get
			{
				return this._IDactivity;
			}
			set
			{
				if ((this._IDactivity != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDactivityChanging(value);
					this.SendPropertyChanging();
					this._IDactivity = value;
					this.SendPropertyChanged("IDactivity");
					this.OnIDactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filepath", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Filepath
		{
			get
			{
				return this._Filepath;
			}
			set
			{
				if ((this._Filepath != value))
				{
					this.OnFilepathChanging(value);
					this.SendPropertyChanging();
					this._Filepath = value;
					this.SendPropertyChanged("Filepath");
					this.OnFilepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeGood", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeGood
		{
			get
			{
				return this._TimeGood;
			}
			set
			{
				if ((this._TimeGood != value))
				{
					this.OnTimeGoodChanging(value);
					this.SendPropertyChanging();
					this._TimeGood = value;
					this.SendPropertyChanged("TimeGood");
					this.OnTimeGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBad", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeBad
		{
			get
			{
				return this._TimeBad;
			}
			set
			{
				if ((this._TimeBad != value))
				{
					this.OnTimeBadChanging(value);
					this.SendPropertyChanging();
					this._TimeBad = value;
					this.SendPropertyChanged("TimeBad");
					this.OnTimeBadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeNotUsed", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeNotUsed
		{
			get
			{
				return this._TimeNotUsed;
			}
			set
			{
				if ((this._TimeNotUsed != value))
				{
					this.OnTimeNotUsedChanging(value);
					this.SendPropertyChanging();
					this._TimeNotUsed = value;
					this.SendPropertyChanged("TimeNotUsed");
					this.OnTimeNotUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPressure", DbType="Float")]
		public System.Nullable<double> MaxPressure
		{
			get
			{
				return this._MaxPressure;
			}
			set
			{
				if ((this._MaxPressure != value))
				{
					this.OnMaxPressureChanging(value);
					this.SendPropertyChanging();
					this._MaxPressure = value;
					this.SendPropertyChanged("MaxPressure");
					this.OnMaxPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPressure", DbType="Float")]
		public System.Nullable<double> MinPressure
		{
			get
			{
				return this._MinPressure;
			}
			set
			{
				if ((this._MinPressure != value))
				{
					this.OnMinPressureChanging(value);
					this.SendPropertyChanging();
					this._MinPressure = value;
					this.SendPropertyChanged("MinPressure");
					this.OnMinPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTemperature", DbType="Float")]
		public System.Nullable<double> MaxTemperature
		{
			get
			{
				return this._MaxTemperature;
			}
			set
			{
				if ((this._MaxTemperature != value))
				{
					this.OnMaxTemperatureChanging(value);
					this.SendPropertyChanging();
					this._MaxTemperature = value;
					this.SendPropertyChanged("MaxTemperature");
					this.OnMaxTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTemperature", DbType="Float")]
		public System.Nullable<double> MinTemperature
		{
			get
			{
				return this._MinTemperature;
			}
			set
			{
				if ((this._MinTemperature != value))
				{
					this.OnMinTemperatureChanging(value);
					this.SendPropertyChanging();
					this._MinTemperature = value;
					this.SendPropertyChanged("MinTemperature");
					this.OnMinTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRH", DbType="Int")]
		public System.Nullable<int> MaxRH
		{
			get
			{
				return this._MaxRH;
			}
			set
			{
				if ((this._MaxRH != value))
				{
					this.OnMaxRHChanging(value);
					this.SendPropertyChanging();
					this._MaxRH = value;
					this.SendPropertyChanged("MaxRH");
					this.OnMaxRHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRH", DbType="Int")]
		public System.Nullable<int> MinRH
		{
			get
			{
				return this._MinRH;
			}
			set
			{
				if ((this._MinRH != value))
				{
					this.OnMinRHChanging(value);
					this.SendPropertyChanging();
					this._MinRH = value;
					this.SendPropertyChanged("MinRH");
					this.OnMinRHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseFactor", DbType="Float")]
		public System.Nullable<double> UseFactor
		{
			get
			{
				return this._UseFactor;
			}
			set
			{
				if ((this._UseFactor != value))
				{
					this.OnUseFactorChanging(value);
					this.SendPropertyChanging();
					this._UseFactor = value;
					this.SendPropertyChanged("UseFactor");
					this.OnUseFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDContract", DbType="Int")]
		public System.Nullable<int> IDContract
		{
			get
			{
				return this._IDContract;
			}
			set
			{
				if ((this._IDContract != value))
				{
					this.OnIDContractChanging(value);
					this.SendPropertyChanging();
					this._IDContract = value;
					this.SendPropertyChanged("IDContract");
					this.OnIDContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int")]
		public System.Nullable<int> IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_IndicatorSingle", Storage="_Activity", ThisKey="IDactivity", OtherKey="IDactivity", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.IndicatorSingle.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.IndicatorSingle.Add(this);
						this._IDactivity = value.IDactivity;
					}
					else
					{
						this._IDactivity = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Sp_Insert_UsuerResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_UsuerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_UsuerResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_UsuerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_UsuerResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_UsuerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(159) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_DoctorResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_DoctorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(167) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_EmpresaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_EmpresaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(138) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_MenuResult
	{
		
		private int _Menu;
		
		private string _Message;
		
		public Sp_Insert_MenuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Menu", DbType="Int NOT NULL")]
		public int Menu
		{
			get
			{
				return this._Menu;
			}
			set
			{
				if ((this._Menu != value))
				{
					this._Menu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(135)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_MenuResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_MenuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(135)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_MenuResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_MenuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(134)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_TrabajadorResult
	{
		
		private int _Employee;
		
		private string _Message;
		
		public Sp_Delete_TrabajadorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="Int NOT NULL")]
		public int Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(89) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_OcupacionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_OcupacionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_OcupacionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_OcupacionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_OcupacionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_OcupacionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_GuardiaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_GuardiaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_GuardiaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_GuardiaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_GuardiaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_GuardiaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_CondicionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_CondicionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_FactorRiesgoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_FactorRiesgoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_CondicionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_CondicionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_FactorRiesgoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_FactorRiesgoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_CondicionResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_CondicionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_FactorRiesgoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_FactorRiesgoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_MarcaModeloResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_MarcaModeloResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_MarcaModeloResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_MarcaModeloResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_MarcaModeloResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_MarcaModeloResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_DoctorResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_DoctorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_DoctorResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_DoctorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_ActividadResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_ActividadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_ActividadResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_ActividadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_ActividadResult
	{
		
		private int _Activity;
		
		private string _Message;
		
		public Sp_Update_ActividadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="Int NOT NULL")]
		public int Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this._Activity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Delete_ContratoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Delete_ContratoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_EmpresaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_EmpresaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(164) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_EmpresaResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_EmpresaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_LoginUsuerResult
	{
		
		private int _IdUsuario;
		
		private string _DNI;
		
		private string _Name;
		
		private string _LastName1;
		
		private string _LastName2;
		
		private int _Type;
		
		private string _Password;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.DateTime _RegisterDate;
		
		private System.Nullable<System.DateTime> _LastAccesDate;
		
		private System.Nullable<bool> _Activo;
		
		public Sp_LoginUsuerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this._DNI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName1
		{
			get
			{
				return this._LastName1;
			}
			set
			{
				if ((this._LastName1 != value))
				{
					this._LastName1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName2
		{
			get
			{
				return this._LastName2;
			}
			set
			{
				if ((this._LastName2 != value))
				{
					this._LastName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="Date NOT NULL")]
		public System.DateTime RegisterDate
		{
			get
			{
				return this._RegisterDate;
			}
			set
			{
				if ((this._RegisterDate != value))
				{
					this._RegisterDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccesDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastAccesDate
		{
			get
			{
				return this._LastAccesDate;
			}
			set
			{
				if ((this._LastAccesDate != value))
				{
					this._LastAccesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this._Activo = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_ContratoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_ContratoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_ContratoResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_ContratoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Update_TrabajadorResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Update_TrabajadorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class Sp_Insert_TrabajadorResult
	{
		
		private int _Codigo;
		
		private string _Message;
		
		public Sp_Insert_TrabajadorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(90) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
